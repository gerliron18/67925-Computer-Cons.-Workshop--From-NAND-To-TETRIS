// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7);
    Register(in=in , load=reg0 , out=reg0Res);
    Register(in=in , load=reg1 , out=reg1Res);
    Register(in=in , load=reg2 , out=reg2Res);
    Register(in=in , load=reg3 , out=reg3Res);
    Register(in=in , load=reg4 , out=reg4Res);
    Register(in=in , load=reg5 , out=reg5Res);
    Register(in=in , load=reg6 , out=reg6Res);
    Register(in=in , load=reg7 , out=reg7Res);
    Mux8Way16(a=reg0Res, b=reg1Res, c=reg2Res, d=reg3Res, e=reg4Res, f=reg5Res, g=reg6Res, h=reg7Res, sel=address, out=out);
}
function SubMarine.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push argument 4
pop this 4
push constant 0
pop static 0
push constant 512
pop static 1
push argument 5
pop this 5
push pointer 0
return
function SubMarine.dispose 0
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
push constant 0
call SubMarine.draw_SubMarine 4
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function SubMarine.draw_SubMarine 0
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
push constant 2
call Math.divide 2
sub
push argument 2
push argument 1
push this 2
push constant 2
call Math.divide 2
add
push argument 2
push this 3
push constant 2
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push this 2
push constant 25
call Math.divide 2
sub
push argument 2
push this 3
sub
push argument 1
push this 2
push constant 25
call Math.divide 2
add
push argument 2
push this 3
push constant 8
call Math.divide 2
sub
call Screen.drawRectangle 4
pop temp 0
push argument 1
push this 2
push constant 12
call Math.divide 2
sub
push argument 2
push this 3
sub
push argument 1
push this 2
push constant 25
call Math.divide 2
sub
push argument 2
push this 3
sub
push constant 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function SubMarine.draw 0
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
push constant 0
not
call SubMarine.draw_SubMarine 4
pop temp 0
push constant 0
return
function SubMarine.move 2
push argument 0
pop pointer 0
push this 0
pop local 1
push this 5
push constant 1
eq
push this 0
push this 4
add
push static 1
push this 2
push constant 2
call Math.divide 2
sub
gt
push this 0
push this 4
add
push static 1
push this 2
push constant 2
call Math.divide 2
sub
eq
or
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
pop this 5
label IF_FALSE0
push this 5
push constant 1
neg
eq
push this 0
push this 4
sub
push static 0
push this 2
push constant 2
call Math.divide 2
add
lt
push this 0
push this 4
sub
push static 0
push this 2
push constant 2
call Math.divide 2
add
eq
or
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop this 5
label IF_FALSE1
push this 5
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 4
add
pop this 0
goto IF_END2
label IF_FALSE2
push this 0
push this 4
sub
pop this 0
label IF_END2
push pointer 0
push local 1
push this 1
push constant 0
call SubMarine.draw_SubMarine 4
pop temp 0
push pointer 0
push this 0
push this 1
push constant 0
not
call SubMarine.draw_SubMarine 4
pop temp 0
push constant 0
return
function SubMarine.swapDirections 0
push argument 0
pop pointer 0
push this 5
push this 5
call Math.multiply 2
pop this 5
push constant 0
return
function SubMarine.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function SubMarine.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function SubMarine.blink 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push pointer 0
push this 0
push this 1
push constant 0
call SubMarine.draw_SubMarine 4
pop temp 0
push constant 300
call Sys.wait 1
pop temp 0
push pointer 0
push this 0
push this 1
push constant 0
not
call SubMarine.draw_SubMarine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
push constant 300
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
push this 0
push this 1
push constant 0
call SubMarine.draw_SubMarine 4
pop temp 0
push constant 0
return
function SubMarine.getX 0
push argument 0
pop pointer 0
push this 0
return
function SubMarine.getY 0
push argument 0
pop pointer 0
push this 1
return
function SubMarine.getHeight 0
push argument 0
pop pointer 0
push this 3
return
function SubMarine.getWidth 0
push argument 0
pop pointer 0
push this 2
return
function SubMarine.getDir 0
push argument 0
pop pointer 0
push this 5
return
